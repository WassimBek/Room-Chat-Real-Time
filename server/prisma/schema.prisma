// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id             String    @id @default(uuid())
  username       String    @unique
  name           String
  email          String    @unique
  password       String
  otp            otp?
  message        message[]
  room           room[]
  profile_url_id file?     @relation(fields: [file_id], references: [id])
  file_id        String?   @unique
}

model room {
  id          String    @id @default(uuid())
  title       String
  user        user[]
  room_code   room_code @relation(fields: [room_codeId], references: [id] , onDelete: Cascade)
  room_codeId String    @unique
}

model message {
  id         String    @id @default(uuid())
  message    String
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  user       user      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
}

model otp {
  id          String   @id @default(uuid())
  otp_code    Int
  verify_code Boolean  @default(false)
  created_at  DateTime @default(now())
  expired_at  DateTime
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     String   @unique
}

model file {
  id         String   @id @default(uuid())
  url        String?
  is_deleted Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       user?
}

model room_code {
  id   String @id @default(uuid())
  code Int
  room room?
}
